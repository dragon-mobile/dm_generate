[build-system]
requires = ["setuptools>=75.1", "setuptools_scm>=8.1"]
build-backend = "setuptools.build_meta"

[project]
name = "dm_generate"
dynamic = ["version"]
authors = [{ name = "Michael Cummings", email = "mgcummings@yahoo.com" }]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Framework :: Pytest",
    "Framework :: Setuptools",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
]
keywords = ["FreeCAD", "KiCAD"]
license = { text = "BSD-3-Clause" }
maintainers = [{ name = "Michael Cummings", email = "mgcummings@yahoo.com" }]
readme = "README.md"
requires-python = ">=3.12"

[project.optional-dependencies]
test = [
    "pytest>=8.3",
    "pytest-cov>=7.6",
    "pytest-codeblocks>=0.17",
    "pytest-bdd-ng>=2.1",
]

[project.urls]
Homepage = "https://github.com/dragon-mobile/dm_generate"
Issues = "https://github.com/dragon-mobile/dm_generate/issues"
Repository = "https://github.com/dragon-mobile/dm_generate"

[tool.pytest.ini_options]
addopts = "--codeblocks --cov=dm_generate --import-mode=importlib --pyargs dm_generate"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
include = ["pyproject.toml", "src/**/*.py"]

# Same as Black.
line-length = 80
indent-width = 4

# Assume Python 3.8
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "N"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.setuptools_scm]
